{"ast":null,"code":"import { ref } from \"vue\";\nimport makeRequest from \"./api.js\";\nexport default {\n  name: \"CreatePost\",\n  setup() {\n    const newPost = ref({\n      title: \"\",\n      tags: \"\",\n      publishDate: \"\",\n      owner: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\"\n      }\n    });\n    const createPost = async () => {\n      try {\n        const userResponse = await makeRequest(\"POST\", \"https://dummyapi.io/data/v1/user/create\", newPost.value.owner);\n        if (!userResponse.ok) {\n          throw new Error(\"Failed to create user\");\n        }\n        const user = userResponse.data;\n        newPost.value.owner = user;\n        const postResponse = await makeRequest(\"POST\", \"https://dummyapi.io/data/v1/post/create\", newPost.value);\n        if (!postResponse.ok) {\n          throw new Error(\"Failed to create post\");\n        }\n        console.log(\"Post created:\", postResponse);\n        // Handle the response or perform further actions\n      } catch (error) {\n        console.error(\"Failed to create post:\", error);\n        // Handle the error appropriately\n      }\n    };\n\n    return {\n      newPost,\n      createPost\n    };\n  }\n};","map":{"version":3,"names":["ref","makeRequest","name","setup","newPost","title","tags","publishDate","owner","firstName","lastName","email","createPost","userResponse","value","ok","Error","user","data","postResponse","console","log","error"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/CreatePost.vue"],"sourcesContent":["<template>\n  <div class=\"create-post\">\n    <h2>Create Post</h2>\n    <form @submit.prevent=\"createPost\" class=\"post-form\">\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" v-model=\"newPost.title\" required />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"tags\">Tags</label>\n        <input type=\"text\" id=\"tags\" v-model=\"newPost.tags\" required />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"publishDate\">Publish Date</label>\n        <input\n          type=\"date\"\n          id=\"publishDate\"\n          v-model=\"newPost.publishDate\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"ownerFirstName\">Owner First Name</label>\n        <input\n          type=\"text\"\n          id=\"ownerFirstName\"\n          v-model=\"newPost.owner.firstName\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"ownerLastName\">Owner Last Name</label>\n        <input\n          type=\"text\"\n          id=\"ownerLastName\"\n          v-model=\"newPost.owner.lastName\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"ownerEmail\">Owner Email</label>\n        <input\n          type=\"email\"\n          id=\"ownerEmail\"\n          v-model=\"newPost.owner.email\"\n          required\n        />\n      </div>\n\n      <button type=\"submit\" class=\"submit-button\">Create</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport makeRequest from \"./api.js\";\n\nexport default {\n  name: \"CreatePost\",\n  setup() {\n    const newPost = ref({\n      title: \"\",\n      tags: \"\",\n      publishDate: \"\",\n      owner: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n      },\n    });\n\n    const createPost = async () => {\n      try {\n        const userResponse = await makeRequest(\n          \"POST\",\n          \"https://dummyapi.io/data/v1/user/create\",\n          newPost.value.owner\n        );\n\n        if (!userResponse.ok) {\n          throw new Error(\"Failed to create user\");\n        }\n\n        const user = userResponse.data;\n\n        newPost.value.owner = user;\n\n        const postResponse = await makeRequest(\n          \"POST\",\n          \"https://dummyapi.io/data/v1/post/create\",\n          newPost.value\n        );\n\n        if (!postResponse.ok) {\n          throw new Error(\"Failed to create post\");\n        }\n\n        console.log(\"Post created:\", postResponse);\n        // Handle the response or perform further actions\n      } catch (error) {\n        console.error(\"Failed to create post:\", error);\n        // Handle the error appropriately\n      }\n    };\n\n    return {\n      newPost,\n      createPost,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.create-post {\n  max-width: 400px;\n  margin: 0 auto;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n.post-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\nlabel {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\ninput[type=\"text\"],\ninput[type=\"date\"],\ninput[type=\"email\"] {\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n}\n\n.submit-button {\n  padding: 10px 20px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n}\n\n.submit-button:hover {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":"AA4DA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,WAAU,MAAO,UAAU;AAElC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAIJ,GAAG,CAAC;MAClBK,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE;QACLC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACT;IACF,CAAC,CAAC;IAEF,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,YAAW,GAAI,MAAMZ,WAAW,CACpC,MAAM,EACN,yCAAyC,EACzCG,OAAO,CAACU,KAAK,CAACN,KAChB,CAAC;QAED,IAAI,CAACK,YAAY,CAACE,EAAE,EAAE;UACpB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QAEA,MAAMC,IAAG,GAAIJ,YAAY,CAACK,IAAI;QAE9Bd,OAAO,CAACU,KAAK,CAACN,KAAI,GAAIS,IAAI;QAE1B,MAAME,YAAW,GAAI,MAAMlB,WAAW,CACpC,MAAM,EACN,yCAAyC,EACzCG,OAAO,CAACU,KACV,CAAC;QAED,IAAI,CAACK,YAAY,CAACJ,EAAE,EAAE;UACpB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QAEAI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,YAAY,CAAC;QAC1C;MACF,EAAE,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C;MACF;IACF,CAAC;;IAED,OAAO;MACLlB,OAAO;MACPQ;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}