{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from \"vue\";\nexport default {\n  name: \"PostDetails\",\n  setup() {\n    const post = ref(null);\n    const comments = ref([]);\n    const newComment = ref(\"\");\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`https://dummyapi.io/data/v1/post/id=1`, {\n          headers: {\n            \"app-id\": \"645e1fa135277554efa9d769\"\n          }\n        });\n        const data = await response.json();\n        post.value = data;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(`https://dummyapi.io/data/v1/post/${$route.params.id}/comment`, {\n          headers: {\n            \"app-id\": \"645e1fa135277554efa9d769\"\n          }\n        });\n        const data = await response.json();\n        comments.value = data.data;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const addComment = async () => {\n      try {\n        const response = await fetch(`https://dummyapi.io/data/v1/post/${$route.params.id}/comment`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"app-id\": \"645e1fa135277554efa9d769\"\n          },\n          body: JSON.stringify({\n            message: newComment.value\n          })\n        });\n        const data = await response.json();\n        comments.value.push(data);\n        newComment.value = \"\";\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    onMounted(() => {\n      fetchPost();\n      fetchComments();\n    });\n    return {\n      post,\n      comments,\n      newComment,\n      addComment\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","name","setup","post","comments","newComment","fetchPost","response","fetch","headers","data","json","value","error","console","fetchComments","$route","params","id","addComment","method","body","JSON","stringify","message","push"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/Post.vue"],"sourcesContent":["<template>\n  <div>\n    <p>Post</p>\n    <!-- <p>{{ post.publishDate }}</p> -->\n    <p>By {{ post.owner.firstName }} {{ post.owner.lastName }}</p>\n    <p>{{ post.text }}</p>\n    <p>Tags: {{ post.tags.join(\", \") }}</p>\n    <h3>Comments</h3>\n    <ul>\n      <!-- <li v-for=\"comment in comments\" :key=\"comment.id\">\n        <p>{{ comment.owner.firstName }} {{ comment.owner.lastName }}:</p>\n        <p>{{ comment.message }}</p>\n      </li> -->\n    </ul>\n    <h3>Create Comment</h3>\n    <textarea v-model=\"newComment\" rows=\"3\" cols=\"30\"></textarea>\n    <button @click=\"addComment\">Add Comment</button>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"PostDetails\",\n  setup() {\n    const post = ref(null);\n    const comments = ref([]);\n    const newComment = ref(\"\");\n\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`https://dummyapi.io/data/v1/post/id=1`, {\n          headers: {\n            \"app-id\": \"645e1fa135277554efa9d769\",\n          },\n        });\n        const data = await response.json();\n        post.value = data;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(\n          `https://dummyapi.io/data/v1/post/${$route.params.id}/comment`,\n          {\n            headers: {\n              \"app-id\": \"645e1fa135277554efa9d769\",\n            },\n          }\n        );\n        const data = await response.json();\n        comments.value = data.data;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const addComment = async () => {\n      try {\n        const response = await fetch(\n          `https://dummyapi.io/data/v1/post/${$route.params.id}/comment`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"app-id\": \"645e1fa135277554efa9d769\",\n            },\n            body: JSON.stringify({\n              message: newComment.value,\n            }),\n          }\n        );\n        const data = await response.json();\n        comments.value.push(data);\n        newComment.value = \"\";\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    onMounted(() => {\n      fetchPost();\n      fetchComments();\n    });\n\n    return {\n      post,\n      comments,\n      newComment,\n      addComment,\n    };\n  },\n};\n</script>\n"],"mappings":";AAqBA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAEpC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIJ,GAAG,CAAC,IAAI,CAAC;IACtB,MAAMK,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,UAAS,GAAIN,GAAG,CAAC,EAAE,CAAC;IAE1B,MAAMO,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAE,uCAAsC,EAAE;UACpEC,OAAO,EAAE;YACP,QAAQ,EAAE;UACZ;QACF,CAAC,CAAC;QACF,MAAMC,IAAG,GAAI,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCR,IAAI,CAACS,KAAI,GAAIF,IAAI;MACnB,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,MAAME,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMR,QAAO,GAAI,MAAMC,KAAK,CACzB,oCAAmCQ,MAAM,CAACC,MAAM,CAACC,EAAG,UAAS,EAC9D;UACET,OAAO,EAAE;YACP,QAAQ,EAAE;UACZ;QACF,CACF,CAAC;QACD,MAAMC,IAAG,GAAI,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCP,QAAQ,CAACQ,KAAI,GAAIF,IAAI,CAACA,IAAI;MAC5B,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,MAAMM,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMZ,QAAO,GAAI,MAAMC,KAAK,CACzB,oCAAmCQ,MAAM,CAACC,MAAM,CAACC,EAAG,UAAS,EAC9D;UACEE,MAAM,EAAE,MAAM;UACdX,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,QAAQ,EAAE;UACZ,CAAC;UACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,OAAO,EAAEnB,UAAU,CAACO;UACtB,CAAC;QACH,CACF,CAAC;QACD,MAAMF,IAAG,GAAI,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCP,QAAQ,CAACQ,KAAK,CAACa,IAAI,CAACf,IAAI,CAAC;QACzBL,UAAU,CAACO,KAAI,GAAI,EAAE;MACvB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDb,SAAS,CAAC,MAAM;MACdM,SAAS,CAAC,CAAC;MACXS,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,OAAO;MACLZ,IAAI;MACJC,QAAQ;MACRC,UAAU;MACVc;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}