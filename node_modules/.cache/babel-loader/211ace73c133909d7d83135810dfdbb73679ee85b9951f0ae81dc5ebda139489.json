{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"asdadas\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.id\n    }, [_createVNode(_component_router_link, {\n      to: `/${post.id}`\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(post.title), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"p\", null, _toDisplayString(post.date), 1 /* TEXT */), _createElementVNode(\"p\", null, \"By \" + _toDisplayString(post.user), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(post.content), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Tags: \" + _toDisplayString(post.tags.join(\", \")), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","posts","post","key","id","_createVNode","_component_router_link","to","title","_toDisplayString","date","user","content","tags","join"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>asdadas</h2>\n    <ul>\n      <li v-for=\"post in posts\" :key=\"post.id\">\n        <router-link :to=\"`/${post.id}`\">{{ post.title }}</router-link>\n        <p>{{ post.date }}</p>\n        <p>By {{ post.user }}</p>\n        <p>{{ post.content }}</p>\n        <p>Tags: {{ post.tags.join(\", \") }}</p>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { useQuery } from \"vue-query\";\n\nexport default {\n  name: \"HomeWork\",\n  setup() {\n    const { data: posts } = useQuery(\"posts\", fetchPosts);\n\n    async function fetchPosts() {\n      const response = await fetch(\"https://dummyapi.io/data/api/post\", {\n        headers: {\n          \"app-id\": \"YOUR_DUMMY_API_APP_ID\",\n        },\n      });\n      const data = await response.json();\n      return data.data;\n    }\n\n    return {\n      posts,\n    };\n  },\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAgB,YAAZ,SAAO;;;;uBADbC,mBAAA,CAWM,cAVJC,UAAgB,EAChBF,mBAAA,CAQK,c,kBAPHC,mBAAA,CAMKE,SAAA,QAAAC,WAAA,CANcC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAMK;MANsBO,GAAG,EAAED,IAAI,CAACE;QACnCC,YAAA,CAA+DC,sBAAA;MAAjDC,EAAE,MAAML,IAAI,CAACE,EAAE;;wBAAI,MAAgB,C,kCAAbF,IAAI,CAACM,KAAK,iB;;;iDAC9Cb,mBAAA,CAAsB,WAAAc,gBAAA,CAAhBP,IAAI,CAACQ,IAAI,kBACff,mBAAA,CAAyB,WAAtB,KAAG,GAAAc,gBAAA,CAAGP,IAAI,CAACS,IAAI,kBAClBhB,mBAAA,CAAyB,WAAAc,gBAAA,CAAnBP,IAAI,CAACU,OAAO,kBAClBjB,mBAAA,CAAuC,WAApC,QAAM,GAAAc,gBAAA,CAAGP,IAAI,CAACW,IAAI,CAACC,IAAI,uB"},"metadata":{},"sourceType":"module","externalDependencies":[]}