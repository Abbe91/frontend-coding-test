{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  name: \"CreatePost\",\n  setup() {\n    const newPost = ref({\n      title: \"\",\n      content: \"\"\n    });\n    const createPost = async () => {\n      try {\n        const response = await fetch(\"https://dummyapi.io/data/v1/post/create\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"app-id\": \"645e1fa135277554efa9d769\" // Replace with your actual API ID\n          },\n\n          body: JSON.stringify({\n            owner: {\n              // Add owner data here\n            },\n            post: {\n              title: newPost.value.title,\n              content: newPost.value.content\n              // Add other post fields if required by the API\n            }\n          })\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Failed to create post\");\n        }\n\n        // Handle success or redirect to home page\n        console.log(\"Post created successfully\");\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    return {\n      newPost,\n      createPost\n    };\n  }\n};","map":{"version":3,"names":["ref","name","setup","newPost","title","content","createPost","response","fetch","method","headers","body","JSON","stringify","owner","post","value","ok","Error","console","log","error"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/CreatePost.vue"],"sourcesContent":["<template>\n  <div class=\"create-post\">\n    <h2>Create Post</h2>\n    <form @submit.prevent=\"createPost\" class=\"post-form\">\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" v-model=\"newPost.title\" required />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"content\">Content</label>\n        <textarea id=\"content\" v-model=\"newPost.content\" required></textarea>\n      </div>\n\n      <button type=\"submit\" class=\"submit-button\">Create</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"CreatePost\",\n  setup() {\n    const newPost = ref({\n      title: \"\",\n      content: \"\",\n    });\n\n    const createPost = async () => {\n      try {\n        const response = await fetch(\n          \"https://dummyapi.io/data/v1/post/create\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"app-id\": \"645e1fa135277554efa9d769\", // Replace with your actual API ID\n            },\n            body: JSON.stringify({\n              owner: {\n                // Add owner data here\n              },\n              post: {\n                title: newPost.value.title,\n                content: newPost.value.content,\n                // Add other post fields if required by the API\n              },\n            }),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Failed to create post\");\n        }\n\n        // Handle success or redirect to home page\n        console.log(\"Post created successfully\");\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    return {\n      newPost,\n      createPost,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.create-post {\n  max-width: 400px;\n  margin: 0 auto;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n.post-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\nlabel {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\ninput[type=\"text\"],\ntextarea {\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n}\n\n.submit-button {\n  padding: 10px 20px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n}\n\n.submit-button:hover {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":"AAoBA,SAASA,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAIH,GAAG,CAAC;MAClBI,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAC1B,yCAAyC,EACzC;UACEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,QAAQ,EAAE,0BAA0B,CAAE;UACxC,CAAC;;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,KAAK,EAAE;cACL;YAAA,CACD;YACDC,IAAI,EAAE;cACJX,KAAK,EAAED,OAAO,CAACa,KAAK,CAACZ,KAAK;cAC1BC,OAAO,EAAEF,OAAO,CAACa,KAAK,CAACX;cACvB;YACF;UACF,CAAC;QACH,CACF,CAAC;;QAED,IAAI,CAACE,QAAQ,CAACU,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;;QAEA;QACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MAC1C,EAAE,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,OAAO;MACLlB,OAAO;MACPG;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}