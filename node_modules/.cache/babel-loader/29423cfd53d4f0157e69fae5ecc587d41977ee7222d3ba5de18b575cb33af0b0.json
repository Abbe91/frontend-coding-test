{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nexport default {\n  name: \"EditPost\",\n  setup() {\n    const post = ref(null);\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`https://dummyapi.io/data/v1/post/${$route.params.id}`, {\n          headers: {\n            \"app-id\": \"645e1fa135277554efa9d769\"\n          }\n        });\n        const data = await response.json();\n        post.value = data;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const updatePost = async () => {\n      try {\n        await fetch(`https://dummyapi.io/data/v1/post/${$route.params.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"app-id\": \"645e1fa135277554efa9d769\"\n          },\n          body: JSON.stringify(post.value)\n        });\n        // Handle success or redirect to post details page\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    onMounted(() => {\n      fetchPost();\n    });\n    return {\n      post,\n      updatePost\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","name","setup","post","fetchPost","response","fetch","$route","params","id","headers","data","json","value","error","console","updatePost","method","body","JSON","stringify"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/EditPost.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Edit Post</h2>\n    <!-- <form @submit.prevent=\"updatePost\">\n      <label for=\"title\">Title</label>\n      <input type=\"text\" id=\"title\" v-model=\"post.title\" required />\n      <label for=\"text\">Content</label>\n      <textarea id=\"text\" v-model=\"post.text\" required></textarea>\n      <button type=\"submit\">Update</button>\n    </form> -->\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"EditPost\",\n  setup() {\n    const post = ref(null);\n\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(\n          `https://dummyapi.io/data/v1/post/${$route.params.id}`,\n          {\n            headers: {\n              \"app-id\": \"645e1fa135277554efa9d769\",\n            },\n          }\n        );\n        const data = await response.json();\n        post.value = data;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const updatePost = async () => {\n      try {\n        await fetch(`https://dummyapi.io/data/v1/post/${$route.params.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"app-id\": \"645e1fa135277554efa9d769\",\n          },\n          body: JSON.stringify(post.value),\n        });\n        // Handle success or redirect to post details page\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    onMounted(() => {\n      fetchPost();\n    });\n\n    return {\n      post,\n      updatePost,\n    };\n  },\n};\n</script>\n"],"mappings":"AAcA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAEpC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIJ,GAAG,CAAC,IAAI,CAAC;IAEtB,MAAMK,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CACzB,oCAAmCC,MAAM,CAACC,MAAM,CAACC,EAAG,EAAC,EACtD;UACEC,OAAO,EAAE;YACP,QAAQ,EAAE;UACZ;QACF,CACF,CAAC;QACD,MAAMC,IAAG,GAAI,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCT,IAAI,CAACU,KAAI,GAAIF,IAAI;MACnB,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,MAAME,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMV,KAAK,CAAE,oCAAmCC,MAAM,CAACC,MAAM,CAACC,EAAG,EAAC,EAAE;UAClEQ,MAAM,EAAE,KAAK;UACbP,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,QAAQ,EAAE;UACZ,CAAC;UACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,IAAI,CAACU,KAAK;QACjC,CAAC,CAAC;QACF;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDd,SAAS,CAAC,MAAM;MACdI,SAAS,CAAC,CAAC;IACb,CAAC,CAAC;IAEF,OAAO;MACLD,IAAI;MACJa;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}