{"ast":null,"code":"export async function makeRequest(method, url, data = {}) {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"app-id\": \"645e1fa135277554efa9d769\"\n  };\n  const options = {\n    method,\n    headers,\n    body: JSON.stringify(data)\n  };\n  try {\n    const response = await fetch(url, options);\n    const responseData = await response.json();\n    return responseData;\n  } catch (error) {\n    console.error(\"API request error:\", error);\n    throw new Error(\"Failed to make API request\");\n  }\n}\nexport default makeRequest;\nexport async function fetchPosts() {\n  try {\n    const response = await fetch(\"https://dummyapi.io/data/v1/post\", {\n      headers: {\n        \"app-id\": \"645e1fa135277554efa9d769\"\n      }\n    });\n    const data = await response.json();\n    return data.data;\n  } catch (error) {\n    console.error(\"Failed to fetch posts:\", error);\n    throw new Error(\"Failed to fetch posts\");\n  }\n}","map":{"version":3,"names":["makeRequest","method","url","data","headers","options","body","JSON","stringify","response","fetch","responseData","json","error","console","Error","fetchPosts"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/api.js"],"sourcesContent":["export async function makeRequest(method, url, data = {}) {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"app-id\": \"645e1fa135277554efa9d769\",\n  };\n\n  const options = {\n    method,\n    headers,\n    body: JSON.stringify(data),\n  };\n\n  try {\n    const response = await fetch(url, options);\n    const responseData = await response.json();\n    return responseData;\n  } catch (error) {\n    console.error(\"API request error:\", error);\n    throw new Error(\"Failed to make API request\");\n  }\n}\n\nexport default makeRequest;\nexport async function fetchPosts() {\n  try {\n    const response = await fetch(\"https://dummyapi.io/data/v1/post\", {\n      headers: {\n        \"app-id\": \"645e1fa135277554efa9d769\",\n      },\n    });\n    const data = await response.json();\n    return data.data;\n  } catch (error) {\n    console.error(\"Failed to fetch posts:\", error);\n    throw new Error(\"Failed to fetch posts\");\n  }\n}\n"],"mappings":"AAAA,OAAO,eAAeA,WAAWA,CAACC,MAAM,EAAEC,GAAG,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACxD,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMC,OAAO,GAAG;IACdJ,MAAM;IACNG,OAAO;IACPE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;EAC3B,CAAC;EAED,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,EAAEG,OAAO,CAAC;IAC1C,MAAMM,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC;EAC/C;AACF;AAEA,eAAef,WAAW;AAC1B,OAAO,eAAegB,UAAUA,CAAA,EAAG;EACjC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC/DN,OAAO,EAAE;QACP,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IACF,MAAMD,IAAI,GAAG,MAAMM,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,OAAOT,IAAI,CAACA,IAAI;EAClB,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}