{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Create Post\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"text\"\n}, \"Content\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Create\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => _ctx.createPost && _ctx.createPost(...args), [\"prevent\"]))\n  }, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newPost.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newPost.title]]), _hoisted_3, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.newPost.text = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newPost.text]]), _hoisted_4], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["_createElementVNode","for","type","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","_ctx","createPost","_hoisted_2","id","newPost","title","$event","required","_hoisted_3","text","_hoisted_4"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/CreatePost.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Create Post</h2>\n    <form @submit.prevent=\"createPost\">\n      <label for=\"title\">Title</label>\n      <input type=\"text\" id=\"title\" v-model=\"newPost.title\" required />\n      <label for=\"text\">Content</label>\n      <textarea id=\"text\" v-model=\"newPost.text\" required></textarea>\n      <button type=\"submit\">Create</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"CreatePost\",\n  setup() {\n    const newPost = ref({\n      title: \"\",\n      text: \"\",\n    });\n\n    const createPost = async () => {\n      try {\n        const response = await fetch('https://dummyapi.io/data/v1/post/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'app-id': 'YOUR_DUMMY_API_ID', // Replace with your actual API ID\n          },\n          body: JSON.stringify(this.formData),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to create post');\n        }\n\n        const data = await response.json();\n        console.log('Created post:', data);\n        // Perform any necessary actions after successfully creating the post\n      } catch (error) {\n        console.error(error);\n        // Handle any errors that occur during the POST request\n      }\n    },\n       return {\n      newPost,\n      createPost,\n\n};\n  },\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAoB,YAAhB,aAAW;gCAEbA,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;gCAExBD,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAM,GAAC,SAAO;gCAEzBD,mBAAA,CAAqC;EAA7BE,IAAI,EAAC;AAAQ,GAAC,QAAM;;;uBAPhCC,mBAAA,CASM,cARJC,UAAoB,EACpBJ,mBAAA,CAMO;IANAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BG,UAAgC,E,gBAChCX,mBAAA,CAAiE;IAA1DE,IAAI,EAAC,MAAM;IAACU,EAAE,EAAC,OAAO;+DAAUH,IAAA,CAAAI,OAAO,CAACC,KAAK,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAfP,IAAA,CAAAI,OAAO,CAACC,KAAK,E,GACpDG,UAAiC,E,gBACjCjB,mBAAA,CAA+D;IAArDY,EAAE,EAAC,MAAM;+DAAUH,IAAA,CAAAI,OAAO,CAACK,IAAI,GAAAH,MAAA;IAAEC,QAAQ,EAAR;iDAAdP,IAAA,CAAAI,OAAO,CAACK,IAAI,E,GACzCC,UAAqC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}