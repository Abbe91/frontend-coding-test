{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"ssdadasds\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Comments\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Create Comment\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"h2\", null, _toDisplayString($setup.post.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.post.publishDate), 1 /* TEXT */), _createElementVNode(\"p\", null, \"By \" + _toDisplayString($setup.post.owner.firstName) + \" \" + _toDisplayString($setup.post.owner.lastName), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($setup.post.text), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Tags: \" + _toDisplayString($setup.post.tags.join(\", \")), 1 /* TEXT */), _hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comments, comment => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: comment.id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(comment.owner.firstName) + \" \" + _toDisplayString(comment.owner.lastName) + \":\", 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(comment.message), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_3, _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newComment = $event),\n    rows: \"3\",\n    cols: \"30\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newComment]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.addComment && $setup.addComment(...args))\n  }, \"Add Comment\")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","$setup","post","title","publishDate","owner","firstName","lastName","text","tags","join","_hoisted_2","_Fragment","_renderList","comments","comment","key","id","message","_hoisted_3","newComment","$event","rows","cols","onClick","_cache","args","addComment"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/Post.vue"],"sourcesContent":["<template>\n  <div>\n    <p>ssdadasds</p>\n    <h2>{{ post.title }}</h2>\n    <p>{{ post.publishDate }}</p>\n    <p>By {{ post.owner.firstName }} {{ post.owner.lastName }}</p>\n    <p>{{ post.text }}</p>\n    <p>Tags: {{ post.tags.join(\", \") }}</p>\n    <h3>Comments</h3>\n    <ul>\n      <li v-for=\"comment in comments\" :key=\"comment.id\">\n        <p>{{ comment.owner.firstName }} {{ comment.owner.lastName }}:</p>\n        <p>{{ comment.message }}</p>\n      </li>\n    </ul>\n    <h3>Create Comment</h3>\n    <textarea v-model=\"newComment\" rows=\"3\" cols=\"30\"></textarea>\n    <button @click=\"addComment\">Add Comment</button>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\n\nexport default {\n  name: \"PostDetails\",\n  setup() {\n    const post = ref(null);\n    const comments = ref([]);\n    const newComment = ref(\"\");\n\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(\n          `https://dummyapi.io/data/v1/post/${$route.params.id}`,\n          {\n            headers: {\n              \"app-id\": \"645e1fa135277554efa9d769\",\n            },\n          }\n        );\n        const data = await response.json();\n        post.value = data;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const fetchComments = async () => {\n      try {\n        const response = await fetch(\n          `https://dummyapi.io/data/v1/post/${$route.params.id}/comment`,\n          {\n            headers: {\n              \"app-id\": \"645e1fa135277554efa9d769\",\n            },\n          }\n        );\n        const data = await response.json();\n        comments.value = data.data;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const addComment = async () => {\n      try {\n        const response = await fetch(\n          `https://dummyapi.io/data/v1/post/${$route.params.id}/comment`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"app-id\": \"645e1fa135277554efa9d769\",\n            },\n            body: JSON.stringify({\n              message: newComment.value,\n            }),\n          }\n        );\n        const data = await response.json();\n        comments.value.push(data);\n        newComment.value = \"\";\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    onMounted(() => {\n      fetchPost();\n      fetchComments();\n    });\n\n    return {\n      post,\n      comments,\n      newComment,\n      addComment,\n    };\n  },\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAgB,WAAb,WAAS;gCAMZA,mBAAA,CAAiB,YAAb,UAAQ;gCAOZA,mBAAA,CAAuB,YAAnB,gBAAc;;;uBAdpBC,mBAAA,CAiBM,cAhBJC,UAAgB,EAChBF,mBAAA,CAAyB,YAAAG,gBAAA,CAAlBC,MAAA,CAAAC,IAAI,CAACC,KAAK,kBACjBN,mBAAA,CAA6B,WAAAG,gBAAA,CAAvBC,MAAA,CAAAC,IAAI,CAACE,WAAW,kBACtBP,mBAAA,CAA8D,WAA3D,KAAG,GAAAG,gBAAA,CAAGC,MAAA,CAAAC,IAAI,CAACG,KAAK,CAACC,SAAS,IAAG,GAAC,GAAAN,gBAAA,CAAGC,MAAA,CAAAC,IAAI,CAACG,KAAK,CAACE,QAAQ,kBACvDV,mBAAA,CAAsB,WAAAG,gBAAA,CAAhBC,MAAA,CAAAC,IAAI,CAACM,IAAI,kBACfX,mBAAA,CAAuC,WAApC,QAAM,GAAAG,gBAAA,CAAGC,MAAA,CAAAC,IAAI,CAACO,IAAI,CAACC,IAAI,wBAC1BC,UAAiB,EACjBd,mBAAA,CAKK,c,kBAJHC,mBAAA,CAGKc,SAAA,QAAAC,WAAA,CAHiBZ,MAAA,CAAAa,QAAQ,EAAnBC,OAAO;yBAAlBjB,mBAAA,CAGK;MAH4BkB,GAAG,EAAED,OAAO,CAACE;QAC5CpB,mBAAA,CAAkE,WAAAG,gBAAA,CAA5De,OAAO,CAACV,KAAK,CAACC,SAAS,IAAG,GAAC,GAAAN,gBAAA,CAAGe,OAAO,CAACV,KAAK,CAACE,QAAQ,IAAG,GAAC,iBAC9DV,mBAAA,CAA4B,WAAAG,gBAAA,CAAtBe,OAAO,CAACG,OAAO,iB;oCAGzBC,UAAuB,E,gBACvBtB,mBAAA,CAA6D;+DAA1CI,MAAA,CAAAmB,UAAU,GAAAC,MAAA;IAAEC,IAAI,EAAC,GAAG;IAACC,IAAI,EAAC;iDAA1BtB,MAAA,CAAAmB,UAAU,E,GAC7BvB,mBAAA,CAAgD;IAAvC2B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEzB,MAAA,CAAA0B,UAAA,IAAA1B,MAAA,CAAA0B,UAAA,IAAAD,IAAA,CAAU;KAAE,aAAW,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}