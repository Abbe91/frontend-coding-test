{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1947abec\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Create Post\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"title\"\n}, \"Title\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"text\"\n}, \"Text\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"tags\"\n}, \"Tags\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"submit-button\"\n}, \"Create Post\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Existing code for displaying posts \"), _hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $setup.createPost && $setup.createPost(...args), [\"prevent\"])),\n    class: \"post-form\"\n  }, [_createCommentVNode(\" Add input fields for creating a post \"), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newPost.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newPost.title]])]), _createCommentVNode(\" Add other input fields for post data \"), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newPost.text = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newPost.text]])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"tags\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newPost.tags = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newPost.tags]])]), _createCommentVNode(\" Submit button for creating the post \"), _hoisted_9], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$setup","createPost","_hoisted_3","_hoisted_4","id","newPost","title","$event","required","_hoisted_5","_hoisted_6","text","_hoisted_7","_hoisted_8","tags","_hoisted_9"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/CreatePost.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <!-- Existing code for displaying posts -->\n\n    <h2>Create Post</h2>\n    <form @submit.prevent=\"createPost\" class=\"post-form\">\n      <!-- Add input fields for creating a post -->\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" v-model=\"newPost.title\" required />\n      </div>\n\n      <!-- Add other input fields for post data -->\n      <div class=\"form-group\">\n        <label for=\"text\">Text</label>\n        <textarea id=\"text\" v-model=\"newPost.text\" required></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"tags\">Tags</label>\n        <input type=\"text\" id=\"tags\" v-model=\"newPost.tags\" required />\n      </div>\n\n      <!-- Submit button for creating the post -->\n      <button type=\"submit\" class=\"submit-button\">Create Post</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"Home\",\n  setup() {\n    // Existing code for fetching and displaying posts\n\n    const newPost = ref({\n      title: \"\",\n      text: \"\",\n      tags: \"\",\n    });\n\n    const createPost = async () => {\n      try {\n        // Make a POST request to create the post\n        const response = await fetch(\n          \"https://dummyapi.io/data/v1/post/create\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"app-id\": \"645e1fa135277554efa9d769\", // Replace with your actual app ID\n            },\n            body: JSON.stringify(newPost.value),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Failed to create post\");\n        }\n\n        // Clear the input fields after successful creation\n        newPost.value.title = \"\";\n        newPost.value.text = \"\";\n        newPost.value.tags = \"\";\n\n        // Refresh the list of posts or handle success in any other way\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    return {\n      // Existing code for posts and formatting date\n\n      newPost,\n      createPost,\n    };\n  },\n};\n</script>\n\n<!-- Existing styles -->\n<style scoped>\n/* ... */\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAM;gEAGfC,mBAAA,CAAoB,YAAhB,aAAW;;EAGRD,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;;EAKrBF,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAA8B;EAAvBC,GAAG,EAAC;AAAM,GAAC,MAAI;;EAInBF,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAA8B;EAAvBC,GAAG,EAAC;AAAM,GAAC,MAAI;gEAKxBD,mBAAA,CAAgE;EAAxDE,IAAI,EAAC,QAAQ;EAACH,KAAK,EAAC;GAAgB,aAAW;;;uBAvB3DI,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,mBAAA,wCAA2C,EAE3CC,UAAoB,EACpBN,mBAAA,CAoBO;IApBAO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,MAAA,CAAAC,UAAA,IAAAD,MAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEX,KAAK,EAAC;MACvCM,mBAAA,0CAA6C,EAC7CL,mBAAA,CAGM,OAHNa,UAGM,GAFJC,UAAgC,E,gBAChCd,mBAAA,CAAiE;IAA1DE,IAAI,EAAC,MAAM;IAACa,EAAE,EAAC,OAAO;+DAAUJ,MAAA,CAAAK,OAAO,CAACC,KAAK,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAfR,MAAA,CAAAK,OAAO,CAACC,KAAK,E,KAGtDZ,mBAAA,0CAA6C,EAC7CL,mBAAA,CAGM,OAHNoB,UAGM,GAFJC,UAA8B,E,gBAC9BrB,mBAAA,CAA+D;IAArDe,EAAE,EAAC,MAAM;+DAAUJ,MAAA,CAAAK,OAAO,CAACM,IAAI,GAAAJ,MAAA;IAAEC,QAAQ,EAAR;iDAAdR,MAAA,CAAAK,OAAO,CAACM,IAAI,E,KAG3CtB,mBAAA,CAGM,OAHNuB,UAGM,GAFJC,UAA8B,E,gBAC9BxB,mBAAA,CAA+D;IAAxDE,IAAI,EAAC,MAAM;IAACa,EAAE,EAAC,MAAM;+DAAUJ,MAAA,CAAAK,OAAO,CAACS,IAAI,GAAAP,MAAA;IAAEC,QAAQ,EAAR;iDAAdR,MAAA,CAAAK,OAAO,CAACS,IAAI,E,KAGpDpB,mBAAA,yCAA4C,EAC5CqB,UAAgE,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}