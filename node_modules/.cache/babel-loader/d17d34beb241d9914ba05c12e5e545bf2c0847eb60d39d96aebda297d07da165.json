{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  name: \"Home\",\n  setup() {\n    // Existing code for fetching and displaying posts\n\n    const newPost = ref({\n      title: \"\",\n      text: \"\",\n      tags: \"\"\n    });\n    const createPost = async () => {\n      try {\n        // Make a POST request to create the post\n        const response = await fetch(\"https://dummyapi.io/data/v1/post/create\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"app-id\": \"645e1fa135277554efa9d769\" // Replace with your actual app ID\n          },\n\n          body: JSON.stringify(newPost.value)\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to create post\");\n        }\n\n        // Clear the input fields after successful creation\n        newPost.value.title = \"\";\n        newPost.value.text = \"\";\n        newPost.value.tags = \"\";\n\n        // Refresh the list of posts or handle success in any other way\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    return {\n      // Existing code for posts and formatting date\n\n      newPost,\n      createPost\n    };\n  }\n};","map":{"version":3,"names":["ref","name","setup","newPost","title","text","tags","createPost","response","fetch","method","headers","body","JSON","stringify","value","ok","Error","error","console"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/CreatePost.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <!-- Existing code for displaying posts -->\n\n    <h2>Create Post</h2>\n    <form @submit.prevent=\"createPost\" class=\"post-form\">\n      <!-- Add input fields for creating a post -->\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" v-model=\"newPost.title\" required />\n      </div>\n\n      <!-- Add other input fields for post data -->\n      <div class=\"form-group\">\n        <label for=\"text\">Text</label>\n        <textarea id=\"text\" v-model=\"newPost.text\" required></textarea>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"tags\">Tags</label>\n        <input type=\"text\" id=\"tags\" v-model=\"newPost.tags\" required />\n      </div>\n\n      <!-- Submit button for creating the post -->\n      <button type=\"submit\" class=\"submit-button\">Create Post</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"Home\",\n  setup() {\n    // Existing code for fetching and displaying posts\n\n    const newPost = ref({\n      title: \"\",\n      text: \"\",\n      tags: \"\",\n    });\n\n    const createPost = async () => {\n      try {\n        // Make a POST request to create the post\n        const response = await fetch(\n          \"https://dummyapi.io/data/v1/post/create\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"app-id\": \"645e1fa135277554efa9d769\", // Replace with your actual app ID\n            },\n            body: JSON.stringify(newPost.value),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Failed to create post\");\n        }\n\n        // Clear the input fields after successful creation\n        newPost.value.title = \"\";\n        newPost.value.text = \"\";\n        newPost.value.tags = \"\";\n\n        // Refresh the list of posts or handle success in any other way\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    return {\n      // Existing code for posts and formatting date\n\n      newPost,\n      createPost,\n    };\n  },\n};\n</script>\n\n<!-- Existing styles -->\n<style scoped>\n/* ... */\n</style>\n"],"mappings":"AA8BA,SAASA,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,KAAKA,CAAA,EAAG;IACN;;IAEA,MAAMC,OAAM,GAAIH,GAAG,CAAC;MAClBI,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAC1B,yCAAyC,EACzC;UACEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,QAAQ,EAAE,0BAA0B,CAAE;UACxC,CAAC;;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,OAAO,CAACY,KAAK;QACpC,CACF,CAAC;QAED,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;;QAEA;QACAd,OAAO,CAACY,KAAK,CAACX,KAAI,GAAI,EAAE;QACxBD,OAAO,CAACY,KAAK,CAACV,IAAG,GAAI,EAAE;QACvBF,OAAO,CAACY,KAAK,CAACT,IAAG,GAAI,EAAE;;QAEvB;MACF,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,OAAO;MACL;;MAEAf,OAAO;MACPI;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}