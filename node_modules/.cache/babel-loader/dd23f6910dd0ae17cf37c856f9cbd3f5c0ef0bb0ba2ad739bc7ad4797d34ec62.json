{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport { fetchPosts } from \"./api.js\";\nexport default {\n  name: \"Home\",\n  setup() {\n    const posts = ref([]);\n    const fetchData = async () => {\n      try {\n        posts.value = await fetchPosts();\n      } catch (error) {\n        console.error(\"Failed to fetch posts:\", error);\n      }\n    };\n    onMounted(() => {\n      fetchData();\n    });\n    const formatDate = dateString => {\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    };\n    return {\n      posts,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","fetchPosts","name","setup","posts","fetchData","value","error","console","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <h2>Posts</h2>\n    <ul>\n      <li v-for=\"post in posts\" :key=\"post.id\" class=\"post-item\">\n        <p class=\"publish-date\">{{ formatDate(post.publishDate) }}</p>\n        <div class=\"owner-info\">\n          <img\n            :src=\"post.owner.picture\"\n            :alt=\"post.owner.firstName\"\n            class=\"owner-avatar\"\n          />\n          <p class=\"owner-name\">\n            By {{ post.owner.firstName }} {{ post.owner.lastName }}\n          </p>\n        </div>\n        <p class=\"post-text\">{{ post.text }}</p>\n        <p class=\"post-tags\">Tags: {{ post.tags.join(\", \") }}</p>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport { fetchPosts } from \"./api.js\";\n\nexport default {\n  name: \"Home\",\n  setup() {\n    const posts = ref([]);\n\n    const fetchData = async () => {\n      try {\n        posts.value = await fetchPosts();\n      } catch (error) {\n        console.error(\"Failed to fetch posts:\", error);\n      }\n    };\n\n    onMounted(() => {\n      fetchData();\n    });\n\n    const formatDate = (dateString) => {\n      const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n      return new Date(dateString).toLocaleDateString(undefined, options);\n    };\n\n    return {\n      posts,\n      formatDate,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.home {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.post-item {\n  margin-bottom: 20px;\n  padding: 20px;\n  border-radius: 8px;\n  background-color: #f0f4f8;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.post-title {\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  text-decoration: none;\n  margin-bottom: 10px;\n}\n\n.publish-date {\n  color: #777;\n  font-size: 14px;\n  margin-bottom: 8px;\n}\n\n.owner-info {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.owner-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n\n.owner-name {\n  font-size: 16px;\n  font-weight: bold;\n  color: #333;\n}\n\n.post-text {\n  font-size: 16px;\n  color: #555;\n  margin-bottom: 10px;\n}\n\n.post-tags {\n  font-size: 14px;\n  color: #777;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n</style>\n"],"mappings":"AAwBA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,UAAS,QAAS,UAAU;AAErC,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMM,SAAQ,GAAI,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFD,KAAK,CAACE,KAAI,GAAI,MAAML,UAAU,CAAC,CAAC;MAClC,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDP,SAAS,CAAC,MAAM;MACdK,SAAS,CAAC,CAAC;IACb,CAAC,CAAC;IAEF,MAAMI,UAAS,GAAKC,UAAU,IAAK;MACjC,MAAMC,OAAM,GAAI;QAAEC,IAAI,EAAE,SAAS;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAU,CAAC;MAClE,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;IACpE,CAAC;IAED,OAAO;MACLP,KAAK;MACLK;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}