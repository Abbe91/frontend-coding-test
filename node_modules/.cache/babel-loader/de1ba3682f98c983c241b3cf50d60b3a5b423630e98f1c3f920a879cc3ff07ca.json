{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Posts\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"{{ data.data.image }}\",\n  alt: \"test\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.posts, post => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: post.id\n    }, [_createVNode(_component_router_link, {\n      to: `/${post.id}`\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(post.title), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"p\", null, _toDisplayString(post.publishDate), 1 /* TEXT */), _hoisted_2, _createElementVNode(\"p\", null, \"By \" + _toDisplayString(post.owner.firstName) + \" \" + _toDisplayString(post.owner.lastName), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(post.text), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Tags: \" + _toDisplayString(post.tags.join(\", \")), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","src","alt","_createElementBlock","_hoisted_1","_Fragment","_renderList","$setup","posts","post","key","id","_createVNode","_component_router_link","to","title","_toDisplayString","publishDate","_hoisted_2","owner","firstName","lastName","text","tags","join"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Posts</h2>\n    <ul>\n      <li v-for=\"post in posts\" :key=\"post.id\">\n        <router-link :to=\"`/${post.id}`\">{{ post.title }}</router-link>\n\n        <p>{{ post.publishDate }}</p>\n        <img src=\"{{ data.data.image }}\" alt=\"test\" />\n        <p>By {{ post.owner.firstName }} {{ post.owner.lastName }}</p>\n        <p>{{ post.text }}</p>\n        <p>Tags: {{ post.tags.join(\", \") }}</p>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport { useQuery } from \"vue-query\";\n\nexport default {\n  name: \"Home\",\n  setup() {\n    const posts = ref([]);\n\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(\"https://dummyapi.io/data/v1/post\", {\n          headers: {\n            \"app-id\": \"645e1fa135277554efa9d769\",\n          },\n        });\n        const data = await response.json();\n        posts.value = data.data;\n        console.log(posts.value);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    onMounted(() => {\n      fetchPosts();\n    });\n\n    return {\n      posts,\n    };\n  },\n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAc,YAAV,OAAK;gCAMLA,mBAAA,CAA8C;EAAzCC,GAAG,EAAC,uBAAuB;EAACC,GAAG,EAAC;;;;;uBAP3CC,mBAAA,CAaM,cAZJC,UAAc,EACdJ,mBAAA,CAUK,c,kBATHG,mBAAA,CAQKE,SAAA,QAAAC,WAAA,CARcC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAQK;MARsBO,GAAG,EAAED,IAAI,CAACE;QACnCC,YAAA,CAA+DC,sBAAA;MAAjDC,EAAE,MAAML,IAAI,CAACE,EAAE;;wBAAI,MAAgB,C,kCAAbF,IAAI,CAACM,KAAK,iB;;;iDAE9Cf,mBAAA,CAA6B,WAAAgB,gBAAA,CAAvBP,IAAI,CAACQ,WAAW,kBACtBC,UAA8C,EAC9ClB,mBAAA,CAA8D,WAA3D,KAAG,GAAAgB,gBAAA,CAAGP,IAAI,CAACU,KAAK,CAACC,SAAS,IAAG,GAAC,GAAAJ,gBAAA,CAAGP,IAAI,CAACU,KAAK,CAACE,QAAQ,kBACvDrB,mBAAA,CAAsB,WAAAgB,gBAAA,CAAhBP,IAAI,CAACa,IAAI,kBACftB,mBAAA,CAAuC,WAApC,QAAM,GAAAgB,gBAAA,CAAGP,IAAI,CAACc,IAAI,CAACC,IAAI,uB"},"metadata":{},"sourceType":"module","externalDependencies":[]}