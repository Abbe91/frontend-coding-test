{"ast":null,"code":"import { ref } from \"vue\";\nexport default {\n  name: \"Createposts\",\n  setup() {\n    const posts = ref({\n      owner: {\n        firstName: \"\",\n        lastName: \"\"\n      }\n    });\n    const createposts = async () => {\n      try {\n        // Create the posts\n        const response = await fetch(\"https://dummyapi.io/data/v1/posts/create\", {\n          method: \"posts\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"app-id\": \"645e1fa135277554efa9d769\" // Replace with your actual app ID\n          },\n\n          body: JSON.stringify(posts.value)\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to create posts\");\n        }\n\n        // Clear the form fields\n        posts.value.tags = \"\";\n        posts.value.publishDate = \"\";\n        posts.value.owner.firstName = \"\";\n        posts.value.owner.lastName = \"\";\n\n        // Handle success or redirect to home page\n      } catch (error) {\n        console.error(\"dasdasda\", error);\n      }\n    };\n    return {\n      posts,\n      createposts\n    };\n  }\n};","map":{"version":3,"names":["ref","name","setup","posts","owner","firstName","lastName","createposts","response","fetch","method","headers","body","JSON","stringify","value","ok","Error","tags","publishDate","error","console"],"sources":["/Users/Abbe/Self techover/vue/frontend-coding-test/src/components/CreatePost.vue"],"sourcesContent":["<template>\n  <div class=\"create-posts\">\n    <h2>Create posts</h2>\n    <form @submit.prevent=\"createposts\" class=\"posts-form\">\n      <div class=\"form-group\">\n        <label for=\"ownerFirstName\">Owner First Name</label>\n        <input\n          type=\"text\"\n          id=\"ownerFirstName\"\n          v-model=\"posts.owner.firstName\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"ownerLastName\">Owner Last Name</label>\n        <input\n          type=\"text\"\n          id=\"ownerLastName\"\n          v-model=\"posts.owner.lastName\"\n          required\n        />\n      </div>\n\n      <button type=\"submit\" class=\"submit-button\">Create</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"Createposts\",\n  setup() {\n    const posts = ref({\n      owner: {\n        firstName: \"\",\n        lastName: \"\",\n      },\n    });\n\n    const createposts = async () => {\n      try {\n        // Create the posts\n        const response = await fetch(\n          \"https://dummyapi.io/data/v1/posts/create\",\n          {\n            method: \"posts\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"app-id\": \"645e1fa135277554efa9d769\", // Replace with your actual app ID\n            },\n            body: JSON.stringify(posts.value),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Failed to create posts\");\n        }\n\n        // Clear the form fields\n        posts.value.tags = \"\";\n        posts.value.publishDate = \"\";\n        posts.value.owner.firstName = \"\";\n        posts.value.owner.lastName = \"\";\n\n        // Handle success or redirect to home page\n      } catch (error) {\n        console.error(\"dasdasda\", error);\n      }\n    };\n\n    return {\n      posts,\n      createposts,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.create-posts {\n  max-width: 400px;\n  margin: 0 auto;\n}\n\nh2 {\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\n.posts-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\nlabel {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\ninput[type=\"text\"],\ninput[type=\"date\"],\ninput[type=\"email\"],\ntextarea {\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n}\n\n.submit-button {\n  padding: 10px;\n  padding: 10px 20px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n}\n\n.submit-button:hover {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":"AA8BA,SAASA,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,GAAG,CAAC;MAChBI,KAAK,EAAE;QACLC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IAEF,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAC1B,0CAA0C,EAC1C;UACEC,MAAM,EAAE,OAAO;UACfC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,QAAQ,EAAE,0BAA0B,CAAE;UACxC,CAAC;;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,KAAK,CAACY,KAAK;QAClC,CACF,CAAC;QAED,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;;QAEA;QACAd,KAAK,CAACY,KAAK,CAACG,IAAG,GAAI,EAAE;QACrBf,KAAK,CAACY,KAAK,CAACI,WAAU,GAAI,EAAE;QAC5BhB,KAAK,CAACY,KAAK,CAACX,KAAK,CAACC,SAAQ,GAAI,EAAE;QAChCF,KAAK,CAACY,KAAK,CAACX,KAAK,CAACE,QAAO,GAAI,EAAE;;QAE/B;MACF,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAClC;IACF,CAAC;IAED,OAAO;MACLjB,KAAK;MACLI;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}